// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using mottu_challenge.Connection;

#nullable disable

namespace mottu_challenge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251001194545_AddMotorcycleEntity")]
    partial class AddMotorcycleEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mottu_challenge.Model.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("FlagAtivo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<int>("Year")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("mottu_challenge.Model.Role", b =>
                {
                    b.Property<byte>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(2)")
                        .HasColumnName("id_role");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("IdRole"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("dt_criacao");

                    b.Property<string>("FlagAtivo")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("fl_ativo");

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("varchar2(100)")
                        .HasColumnName("ds_role");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar2(30)")
                        .HasColumnName("nm_role");

                    b.HasKey("IdRole");

                    b.ToTable("T_MTU_ROLE", (string)null);

                    b.HasData(
                        new
                        {
                            IdRole = (byte)1,
                            CreatedAt = new DateTime(2023, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FlagAtivo = "S",
                            RoleDescription = "Perfil com acesso total ao sistema",
                            RoleName = "ADMIN"
                        },
                        new
                        {
                            IdRole = (byte)2,
                            CreatedAt = new DateTime(2023, 1, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            FlagAtivo = "S",
                            RoleDescription = "Perfil com acesso restrito ao sistema",
                            RoleName = "USER"
                        });
                });

            modelBuilder.Entity("mottu_challenge.Model.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("number(10)")
                        .HasColumnName("id_user");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("dt_criacao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("NVARCHAR2(320)")
                        .HasColumnName("ds_email");

                    b.Property<string>("FlagAtivo")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("fl_ativo");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("vl_password");

                    b.Property<byte>("RoleId")
                        .HasColumnType("number(2)")
                        .HasColumnName("id_role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("nm_username");

                    b.HasKey("IdUser");

                    b.HasIndex("RoleId");

                    b.ToTable("T_MTU_USER", (string)null);
                });

            modelBuilder.Entity("mottu_challenge.Model.User", b =>
                {
                    b.HasOne("mottu_challenge.Model.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_T_MTU_ROLE_USER");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("mottu_challenge.Model.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
